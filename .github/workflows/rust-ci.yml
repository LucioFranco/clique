name: CI 

on:
  push:
    branches:
    - master
  pull_request: {}

jobs:
  check:
    # Run `cargo check` first to ensure that the pushed code at least compiles.
    runs-on: [ubuntu-latest]
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - uses: actions/checkout@master
      - name: Check
        run: cargo check --all --examples --tests
  test-os:
    # Test against stable Rust across macOS, Windows, and Linux.
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
    - name: Install rustfmt
      run: rustup component add rustfmt
    - uses: actions/checkout@master
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo test --all
  rustfmt:
    runs-on: [ubuntu-latest]
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - uses: actions/checkout@master
      - name: Install rustfmt
        run: rustup component install rustfmt
      - name: Check
        run: cargo fmt -- --check 
  # clippy-check:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - run: rustup component add clippy
  #     - uses: actions-rs/clippy-check@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         args: --all-features
